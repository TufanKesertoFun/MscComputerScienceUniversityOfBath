[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\tufan\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\tufan\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Amazon.com Inc. Java 1.8.0_422)
[debug] Load.defaultLoad until apply took 39.603ms
[debug]           Load.loadUnit: plugins took 38.4869ms
[debug]           Load.loadUnit: defsScala took 0.1909ms
[debug] [Loading] Scanning directory C:\Users\tufan\Downloads\Apache-Spark-Demo\project
[debug]             Load.loadUnit: mkEval took 4.4936ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\tufan\Downloads\Apache-Spark-Demo\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 9.7084 ms
[info] loading settings for project apache-spark-demo-build from idea.sbt ...
[debug]               Load.resolveProject(apache-spark-demo-build) took 33.3414ms
[debug]             Load.loadTransitive: finalizeProject(Project(id apache-spark-demo-build, base: C:\Users\tufan\Downloads\Apache-Spark-Demo\project, plugins: List(<none>))) took 60.6242ms
[debug] [Loading] Done in C:\Users\tufan\Downloads\Apache-Spark-Demo\project, returning: (apache-spark-demo-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 336.7828ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.6988ms
[debug]         Load.loadUnit(file:/C:/Users/tufan/Downloads/Apache-Spark-Demo/project/, ...) took 382.1734ms
[debug]       Load.apply: load took 444.1712ms
[debug]       Load.apply: resolveProjects took 2.5191ms
[debug]       Load.apply: finalTransforms took 23.766ms
[debug]       Load.apply: config.delegates took 3.5267ms
[debug]       Load.apply: Def.make(settings)... took 165.5661ms
[debug]       Load.apply: structureIndex took 41.9835ms
[debug]       Load.apply: mkStreams took 1.1823ms
[info] loading project definition from C:\Users\tufan\Downloads\Apache-Spark-Demo\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1699.5853ms
[debug]     Load.loadUnit: defsScala took 0.0018ms
[debug] [Loading] Scanning directory C:\Users\tufan\Downloads\Apache-Spark-Demo
[debug]       Load.loadUnit: mkEval took 0.193ms
